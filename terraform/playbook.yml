---
- name: Pre tasks
  hosts: all
  pre_tasks:
    - name: Verify Ansible is version 2.11 or above. (If this fails you may need to update Ansible)
      ansible.builtin.assert:
        that: ansible_version.full is version_compare('2.11', '>=')
        msg: >
          "Ansible is out of date. See here for more info: https://docs.technotim.live/posts/ansible-automation/"

- name: Gather facts from 'all' hosts in inventory
  hosts: all
  vars:
    ansible_host_key_checking: false
    ansible_ssh_extra_args: '-o UserKnownHostsFile=/dev/null'
  tasks:
    - name: Get network info
      ansible.builtin.setup:
        gather_subset: network

- name: Prepare Proxmox host
  hosts: proxmox_host
  vars:
    lxc_containers: "{{ groups['k3s_cluster'] | map('extract', hostvars) | map(attribute='vmid') }}"
  tasks:
    - name: Configure LXC containers
      ansible.builtin.blockinfile:
        path: /etc/pve/lxc/{{ item }}.conf
        state: present
        block: |
          lxc.apparmor.profile: unconfined
          lxc.cgroup.devices.allow: a
          lxc.cap.drop:
          lxc.mount.auto: "proc:rw sys:rw"
      with_items: '{{ lxc_containers }}'

- name: Add public keys to known_hosts file
  hosts: localhost
  connection: local
  vars:
    ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"
    ssh_known_hosts: "{{ groups['all'] | map('extract', hostvars) | map(attribute='ansible_host') }}"
  tasks:
    - name: Install packages
      become: true
      ansible.builtin.package:
        name: dnsutils
        state: present
        update_cache: true
    - name: Install dnspython python package
      ansible.builtin.pip:
        name: dnspython
    - name: Add to known_hosts
      ansible.builtin.known_hosts:
        path: '{{ ssh_known_hosts_file }}'
        name: '{{ item }}'
        key: "{{ lookup('pipe', 'ssh-keyscan -T 10 ' + item + ',' + lookup('dig', item)) }}"
        state: present
      with_items: '{{ ssh_known_hosts }}'
      become: true


# - name: Prepare k3s nodes
#   hosts: k3s_cluster
#   gather_facts: true
#   environment: "{{ proxy_env | default({}) }}"
#   roles:
#     - role: prereq
#       become: true
#     - role: download
#       become: true
#     - role: raspberrypi
#       become: true
#     - role: k3s_custom_registries
#       become: true
#       when: custom_registries

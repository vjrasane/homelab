import {
  App,
  TerraformOutput,
  TerraformStack
} from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { File } from "./.gen/providers/local/file";

import { Construct } from "constructs";
import { defineProxmox } from "./proxmox";
import { defineVariables } from "./variables";

class HomelabStack extends TerraformStack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    const {
      pmHost,
      pmUser,
      pmApiUser,
      pmApiTokenName,
      pmApiTokenSecret,
      pmPassword
    } = defineVariables(this);

    const { lxcSshKey, lxcPassword } = defineProxmox(this, {
      pmApiTokenName,
      pmApiUser,
      pmUser,
      pmApiTokenSecret,
      pmHost,
      pmPassword
    })

    new File(this, "terraform_vars", {
      content:
        "  pm_host: ${" +
        pmHost.value +
        "}\n  pm_api_user: ${" +
        pmApiUser.value +
        "}\n  pm_api_token_name: ${" +
        pmApiTokenName.value +
        "}\n  pm_api_token_secret: ${" +
        pmApiTokenSecret.value +
        "}\n\n",
      filename: "${path.module}/terraform_vars.yml",
    });

    new TerraformOutput(
      this,
      "lxc_password_out",
      {
        value: lxcPassword.result,
        sensitive: true,
      }
    );

    new TerraformOutput(
      this,
      "lxc_ssh_key_out",
      {
        value: lxcSshKey,
        sensitive: true,
      }
    );

    new File(this, "lxc_ssh_key_file", {
      content: lxcSshKey.privateKeyPem,
      filePermission: "0600",
      filename: "${path.module}/lxc_ssh_key.pem",
    });
  }
}

const app = new App({
  skipValidation: true,
});
new HomelabStack(app, "terraform");
app.synth();

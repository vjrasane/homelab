---

- name: Pre tasks
  hosts: localhost
  pre_tasks:
    - name: Verify Ansible is version 2.17 or above. (If this fails you may need to update Ansible)
      ansible.builtin.assert:
        that: ansible_version.full is version_compare('2.17', '>=')
        msg: >
          "Ansible is out of date. See here for more info: https://docs.technotim.live/posts/ansible-automation/"

- name: Prepare localhost
  hosts: localhost
  connection: local
  vars_files:
    - ../terraform_vars.yml
  tasks:
    - name: Install packages
      become: true
      ansible.builtin.package:
        name: dnsutils
        state: present
        update_cache: true
    - name: Install python dependencies
      ansible.builtin.pip:
        name:
          - dnspython
          - proxmoxer
        break_system_packages: true
    - name: Set LXC SSH key permissions
      ansible.builtin.file:
        path: '{{ lxc_ssh_key_file }}'
        mode: '0700'

- name: Add proxmox to known_hosts file
  hosts: localhost
  become: true
  roles:
    - role: known_hosts
      vars:
        known_hosts_names: "{{ groups['proxmox'] | map('extract', hostvars) | map(attribute='ansible_host') }}"

- name: Prepare Proxmox cluster
  hosts: proxmox
  become: true
  roles:
    - role: proxmox_lxc

- name: Add k3s cluster to known_hosts file
  hosts: localhost
  become: true
  roles:
    - role: known_hosts
      vars:
        known_hosts_names: "{{ groups['k3s_cluster'] | map('extract', hostvars) | map(attribute='ansible_host') }}"

- name: Configure LXC containers
  hosts: k3s_cluster
  become: true
  pre_tasks:
    - name: "Wait for SSH"
      ansible.builtin.wait_for_connection:
  roles:
    - role: lxc

- name: Configure servers
  hosts: server
  become: true
  pre_tasks:
    - name: "Wait for SSH"
      ansible.builtin.wait_for_connection:
  roles:
    - role: k3s_server

- name: Configure agents
  hosts: agent
  become: true
  pre_tasks:
    - name: "Wait for SSH"
      ansible.builtin.wait_for_connection:
  roles:
    - role: k3s_agent
# - name: Prepare k3s nodes
#   hosts: k3s_cluster
#   gather_facts: true
#   environment: "{{ proxy_env | default({}) }}"
#   roles:
#     - role: prereq
#       become: true
#     - role: download
#       become: true
#     - role: raspberrypi
#       become: true
#     - role: k3s_custom_registries
#       become: true
#       when: custom_registries
